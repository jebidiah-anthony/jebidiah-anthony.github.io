I"|o<h1 id="elastalerterpy"><span style="color:red">./elastalerter.py</span></h1>

<hr />

<h2 id="environment">ENVIRONMENT</h2>

<div style="overflow-x:auto"><table>
<tr>
	<td><strong>ELASTICSEARCH</strong></td>
	<td><a href="https://www.elastic.co/downloads/past-releases/elasticsearch-7-4-0">v7.4.0</a></td>
</tr>
<tr>
	<td><strong>VIRTUAL ENVIRONMENT</strong></td>
	<td>Python 3.6</td>
</tr>
<tr>
	<td><strong>OPERATING SYSTEM</strong></td>
	<td>Linux (in this case: Ubuntu 18.04)</td>
</tr>
</table></div>

<hr />

<h2 id="important-notes">IMPORTANT NOTES</h2>

<ul>
  <li>This probably <span style="color:red"><strong>won’t work</strong></span> on Windows Machines.</li>
  <li>The program manually creates a basic config file if none is specified.</li>
  <li>The program manually sets the rule’s alert to <strong><code class="highlighter-rouge">elastalerter.alerter.Alert</code></strong>.</li>
  <li>If mappings are not specified during aggregation, key fields are <strong>automatically set as keyword fields</strong>:
    <div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">query_key</span><span class="pi">:</span> <span class="s">field_name.keyword</span>
<span class="na">metric_agg_key</span><span class="pi">:</span> <span class="s">field_name.keyword</span>
</code></pre></div>    </div>
  </li>
  <li>Logs to be used in a specific test could be a list of files or a directory containing all logs to be indexed.
    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nl">"log"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="s2">"log1.json"</span><span class="p">,</span><span class="w"> </span><span class="s2">"log2.json"</span><span class="p">,</span><span class="w"> </span><span class="err">...</span><span class="p">]</span><span class="w">
  
 </span><span class="err">or</span><span class="w">

</span><span class="nl">"log"</span><span class="p">:</span><span class="w"> </span><span class="s2">"/dir"</span><span class="w">
</span></code></pre></div>    </div>
  </li>
  <li>If a directory is specified, the program will check if it exists as is, in the directory specified in <strong><code class="highlighter-rouge">--logs</code></strong>, or in the current working directory.</li>
  <li>Test results are laid out as follows in <strong><code class="highlighter-rouge">results.json</code></strong>:
    <div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"total"</span><span class="p">:</span><span class="w"> </span><span class="mi">6</span><span class="p">,</span><span class="w">
    </span><span class="nl">"pass"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
    </span><span class="nl">"fail"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
    </span><span class="nl">"tests"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"test_2"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"result"</span><span class="p">:</span><span class="w"> </span><span class="s2">"PASSED"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"message"</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"test_2"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"result"</span><span class="p">:</span><span class="w"> </span><span class="s2">"PASSED"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"message"</span><span class="p">:</span><span class="w"> </span><span class="p">[]</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"test_3"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"result"</span><span class="p">:</span><span class="w"> </span><span class="s2">"FAILED"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"message"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"1 LOG(S) MATCHED: log001.json"</span><span class="w">
            </span><span class="p">]</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"test_4"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"result"</span><span class="p">:</span><span class="w"> </span><span class="s2">"FAILED"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"message"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"7 LOG(S) DID NOT MATCH: agg_log001.json, agg_log002.json, agg_log003.json, agg_log004.json, agg_log005.json, log001.json, log003.json"</span><span class="w">
            </span><span class="p">]</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="nl">"test_agg_1"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"result"</span><span class="p">:</span><span class="w"> </span><span class="s2">"FAILED"</span><span class="p">,</span><span class="w">
            </span><span class="nl">"message"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="s2">"HITS (5) EXCEEDED THE THRESHOLD"</span><span class="w">
            </span><span class="p">]</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div>    </div>
  </li>
</ul>

<hr />

<h2 id="set-up">SET-UP</h2>

<ol>
  <li>
    <p>Download and run <a href="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.4.0-linux-x86_64.tar.gz">elasticsearch 7.4.0</a> for Linux.</p>

    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">tar </span>xvf elasticsearch-7.4.0-linux-x86_64.tar.gz

  ...

<span class="nv">$ </span>elasticsearch-7.4.0/bin/elasticsearch

  ...

</code></pre></div>    </div>
  </li>
  <li>
    <p>Set-up a python virtual environment:</p>

    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>pip3 <span class="nb">install </span>virtualenv

<span class="nv">$ </span>python3 <span class="nt">-m</span> virtualenv v_env

  Using base prefix <span class="s1">'/usr'</span>
  New python executable <span class="k">in </span>CURRENT_WORKING_DIRECTORY/v_env/bin/python3
  Also creating executable <span class="k">in </span>CURRENT_WORKING_DIRECTORY/v_env/bin/python
  Installing setuptools, pip, wheel...
  <span class="k">done</span><span class="nb">.</span>

<span class="nv">$ </span><span class="nb">source </span>v_env/bin/activate

<span class="o">(</span>v_env<span class="o">)</span> <span class="err">$</span>
</code></pre></div>    </div>
  </li>
  <li>
    <p>Download and install dependencies for <strong><em>elastalerter.py</em></strong></p>

    <h3 id="download-and-unzip-the-files">download and unzip the files</h3>
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>v_env<span class="o">)</span> <span class="nv">$ </span>wget https://github.com/jebidiah-anthony/elastalerter/blob/master/elastalerter.zip?raw<span class="o">=</span><span class="nb">true</span>
   
  ...omitted...
  HTTP request sent, awaiting response... 200 OK
  Length: 4248 <span class="o">(</span>4.1K<span class="o">)</span> <span class="o">[</span>application/zip]
  Saving to: ‘elastalerter.zip’

  elastalerter.zip         100%[<span class="o">================================&gt;]</span>   4.15K  <span class="nt">--</span>.-KB/s    <span class="k">in </span>0s
  ...omitted...
   
<span class="o">(</span>v_env<span class="o">)</span> <span class="nv">$ </span>unzip elastalerter.py 
   
  Archive:  elastalerter.zip
    inflating: elastalerter.py
    inflating: requirements.txt
    inflating: setup.py 

</code></pre></div>    </div>

    <h3 id="install-dependencies">install dependencies</h3>
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>v_env<span class="o">)</span> <span class="nv">$ </span>pip <span class="nb">install</span> <span class="nt">--requirement</span> requirements.txt
   
  ...omitted...
  Installing collected packages: pytz, tzlocal, six, APScheduler, urllib3, idna, certifi, chardet, requests, 
  aws-requests-auth, blist, docutils, jmespath, python-dateutil, botocore, s3transfer, boto3, pycparser, cffi, 
  configparser, croniter, defusedxml, docopt, jsonschema, mock, PyStaticConfiguration, stomp.py, exotel, 
  envparse, python-magic, pbr, oauthlib, requests-oauthlib, requests-toolbelt, jira, PyYAML, PySocks, PyJWT, 
  twilio, texttable, elasticsearch, future, thehive4py, elastalert, tabulate
  ...omitted...

</code></pre></div>    </div>

    <h3 id="install-the-alerter">install the alerter</h3>
    <div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>v_env<span class="o">)</span> <span class="nv">$ </span>pip <span class="nb">install</span> <span class="nb">.</span>
   
  ...omitted...
  Successfully built elastalerter
  Installing collected packages: elastalerter
  Successfully installed elastalerter-0.0.2

</code></pre></div>    </div>
  </li>
</ol>

<hr />

<h2 id="execution-w-sample-output">EXECUTION (w/ sample output)</h2>

<h3 id="help--h---help">help (<strong><code class="highlighter-rouge">-h, --help</code></strong>)</h3>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>v_env<span class="o">)</span> <span class="nv">$ </span>python elastalerter.py <span class="nt">-h</span>
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>usage: python ./elastalerter.py --logs LOGS_DIR --rules RULES_DIR --expected expected.json

    SAMPLE "expected.json"
    ------------------------------------------------
    {
        "test_1": {
            "rule": "rule.yaml",
            "log": ["log1.json", "log2.json", ...],
            "match": (true | false),
            "enabled": (true | false)
        },
        "test_2": {
            ...
            "log": "/dir"
            ...
        },
        ...
    }

optional arguments:
  -h, --help       show this help message and exit
  --host HOST      elasticsearch instance host address (default: 127.0.0.1)
  --port PORT      elasticsearch instance port (default: 9200)
  --config YAML    elastalert config file to use.
  --mappings JSON  field data type mappings.
  --verbose        output other details

required arguments:
  --expected JSON  JSON outline of test names and expected results
  --logs DIR       directory of the logs to be indexed
  --rules DIR      directory of the rules to run with elastalert
</code></pre></div></div>

<h3 id="default-output">default output</h3>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>v_env<span class="o">)</span> <span class="nv">$ </span>python elastalerter.py <span class="nt">--logs</span> ./logs <span class="nt">--rules</span> ./rules <span class="nt">--expected</span> expected.json
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span style="color:#779ECB">[+] RUNNING test_1 :</span>
    <span style="color:orange">[+] TESTING RULE -- RULE01 ( ./rule01.yaml )</span>
    <span style="color:green">[+] TEST ( test_1 ) PASSED</span>

<span style="color:#779ECB">[+] RUNNING test_2 :</span>
    <span style="color:orange">[+] TESTING RULE -- RULE02 ( ./rule02.yaml )</span>
    <span style="color:green">[+] TEST ( test_2 ) PASSED</span>

<span style="color:#779ECB">[+] RUNNING test_3 :</span>
    <span style="color:orange">[+] TESTING RULE -- RULE01 ( ./rule01.yaml )</span>
    <span style="color:red">[+] TEST ( test_3 ) FAILED</span>

<span style="color:#779ECB">[+] RUNNING test_4 :</span>
    <span style="color:orange">[+] SPECIFIED LOGS IS A DIRECTORY ( ./logs )</span>
        <span style="color:red">[ERROR] "test_file" IS NOT A VALID JSON FILE.</span>
        <span style="color:red">[ERROR] "test_file.json" IS NOT A VALID LOG FILE.</span>
    <span style="color:orange">[+] TESTING RULE -- RULE02 ( ./rule02.yaml )</span>
    <span style="color:red">[+] TEST ( test_4 ) FAILED</span>

<span style="color:#779ECB">[+] RUNNING test_agg_1 :</span>
    <span style="color:orange">[+] TESTING RULE -- AGG_RULE01 ( ./agg_rule01.yaml )</span>
    <span style="color:red">[+] TEST ( test_agg_1 ) FAILED</span>

<span style="color:#779ECB">[+] RUNNING test_agg_02 :</span>
    <span style="color:orange">[+] TEST ( test_agg_2 ) WAS DISABLED</span>


<span style="color:orange">[+] RESULTS WERE OUTPUT TO CURRENT_WORKING_DIRECTORY/results.json</span>


    ╒════════════╤══════════╤═════════════════════════════════════════════════════════════╕
    │ TestID     │ RESULT   │ MESSAGE                                                     │
    ╞════════════╪══════════╪═════════════════════════════════════════════════════════════╡
    │ test_1     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_2     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_3     │ FAILED   │ &gt; 1 LOG(S) MATCHED: log001.json                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_4     │ FAILED   │ &gt; 7 LOG(S) DID NOT MATCH: agg_log001.json, agg_log002.json, │
    │            │          │   agg_log003.json, agg_log004.json, agg_log005.json,        │
    │            │          │   log001.json, log003.json                                  │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_agg_1 │ FAILED   │ &gt; HITS (5) EXCEEDED THE THRESHOLD                           │
    ╘════════════╧══════════╧═════════════════════════════════════════════════════════════╛
</code></pre></div></div>

<h3 id="mappings---mappings">mappings (<strong><code class="highlighter-rouge">--mappings</code></strong>)</h3>

<h4 id="-sample-mappingsjson">&gt; sample mappings.json</h4>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
    </span><span class="nl">"mappings"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"properties"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="nl">"ip"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"ip"</span><span class="w"> </span><span class="p">},</span><span class="w">
            </span><span class="nl">"port"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w"> </span><span class="nl">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"integer"</span><span class="w"> </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h4 id="-execution">&gt; execution</h4>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>v_env<span class="o">)</span> <span class="nv">$ </span>python elastalerter.py <span class="nt">--logs</span> ./logs <span class="nt">--rules</span> ./rules <span class="nt">--expected</span> expected.json <span class="nt">--mappings</span> mappings.json
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span style="color:#779ECB">[+] RUNNING test_1 :</span>
    <span style="color:orange">[+] TESTING RULE -- RULE01 ( ./rule01.yaml )</span>
    <span style="color:green">[+] TEST ( test_1 ) PASSED</span>

<span style="color:#779ECB">[+] RUNNING test_2 :</span>
    <span style="color:orange">[+] TESTING RULE -- RULE02 ( ./rule02.yaml )</span>
    <span style="color:green">[+] TEST ( test_2 ) PASSED</span>

<span style="color:#779ECB">[+] RUNNING test_3 :</span>
    <span style="color:orange">[+] TESTING RULE -- RULE01 ( ./rule01.yaml )</span>
    <span style="color:red">[+] TEST ( test_3 ) FAILED</span>

<span style="color:#779ECB">[+] RUNNING test_4 :</span>
    <span style="color:orange">[+] SPECIFIED LOGS IS A DIRECTORY ( ./logs )</span>
        <span style="color:red">[ERROR] "test_file" IS NOT A VALID JSON FILE.</span>
        <span style="color:red">[ERROR] "test_file.json" IS NOT A VALID LOG FILE.</span>
    <span style="color:orange">[+] TESTING RULE -- RULE02 ( ./rule02.yaml )</span>
    <span style="color:red">[+] TEST ( test_4 ) FAILED</span>

<span style="color:#779ECB">[+] RUNNING test_agg_1 :</span>
    <span style="color:orange">[+] TESTING RULE -- AGG_RULE01 ( ./agg_rule01.yaml )</span>
    <span style="color:red">[+] TEST ( test_agg_1 ) FAILED</span>

<span style="color:#779ECB">[+] RUNNING test_agg_02 :</span>
    <span style="color:orange">[+] TEST ( test_agg_2 ) WAS DISABLED</span>


<span style="color:orange">[+] RESULTS WERE OUTPUT TO CURRENT_WORKING_DIRECTORY/results.json</span>


    ╒════════════╤══════════╤═════════════════════════════════════════════════════════════╕
    │ TestID     │ RESULT   │ MESSAGE                                                     │
    ╞════════════╪══════════╪═════════════════════════════════════════════════════════════╡
    │ test_1     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_2     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_3     │ FAILED   │ &gt; 1 LOG(S) MATCHED: log001.json                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_4     │ FAILED   │ &gt; 7 LOG(S) DID NOT MATCH: agg_log001.json, agg_log002.json, │
    │            │          │   agg_log003.json, agg_log004.json, agg_log005.json,        │
    │            │          │   log001.json, log003.json                                  │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_agg_1 │ FAILED   │ &gt; HITS (5) EXCEEDED THE THRESHOLD                           │
    ╘════════════╧══════════╧═════════════════════════════════════════════════════════════╛
</code></pre></div></div>

<h3 id="verbose---verbose">verbose (<strong><code class="highlighter-rouge">--verbose</code></strong>)</h3>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">(</span>v_env<span class="o">)</span> <span class="nv">$ </span>python elastalerter.py <span class="nt">--logs</span> ./logs <span class="nt">--rules</span> ./rules <span class="nt">--expected</span> ./expected.json <span class="nt">--verbose</span>
</code></pre></div></div>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span style="color:#779ECB">[+] RUNNING test_1 :</span>
    [+] A NEW INDEX ( test_1 ) WAS CREATED
    [+] TIMESTAMP RANGE -- [2019-09-16T15:59:57 - 2019-09-16T15:59:57]
    <span style="color:orange">[+] TESTING RULE -- RULE01 ( ./rule01.yaml )</span>
    [+] UPDATING RESULTS...
    [+] DELETING TEST INDEX...
    <span style="color:green">[+] TEST ( test_1 ) PASSED</span>

<span style="color:#779ECB">[+] RUNNING test_2 :</span>
    [+] A NEW INDEX ( test_2 ) WAS CREATED
    [+] TIMESTAMP RANGE -- [2019-09-16T15:59:57 - 2019-09-16T15:59:57]
    <span style="color:orange">[+] TESTING RULE -- RULE02 ( ./rule02.yaml )</span>
    [+] UPDATING RESULTS...
    [+] DELETING TEST INDEX...
    <span style="color:green">[+] TEST ( test_2 ) PASSED</span>

<span style="color:#779ECB">[+] RUNNING test_3 :</span>
    [+] A NEW INDEX ( test_3 ) WAS CREATED
    [+] TIMESTAMP RANGE -- [2019-09-16T15:59:57 - 2019-09-16T15:59:57]
    <span style="color:orange">[+] TESTING RULE -- RULE01 ( ./rule01.yaml )</span>
    [+] UPDATING RESULTS...
    [+] DELETING TEST INDEX...
    <span style="color:red">[+] TEST ( test_3 ) FAILED</span>

<span style="color:#779ECB">[+] RUNNING test_4 :</span>
    [+] A NEW INDEX ( test_4 ) WAS CREATED
    <span style="color:orange">[+] SPECIFIED LOGS IS A DIRECTORY ( ./logs )</span>
        <span style="color:red">[ERROR] "test_file" IS NOT A VALID JSON FILE.</span>
        <span style="color:red">[ERROR] "test_file.json" IS NOT A VALID LOG FILE.</span>
    [+] TIMESTAMP RANGE -- [2019-09-16T15:59:57 - 2019-09-16T15:59:57]
    <span style="color:orange">[+] TESTING RULE -- RULE02 ( ./rule02.yaml )</span>
    [+] UPDATING RESULTS...
    [+] DELETING TEST INDEX...
    <span style="color:red">[+] TEST ( test_4 ) FAILED</span>

<span style="color:#779ECB">[+] RUNNING test_agg_1 :</span>
    [+] A NEW INDEX ( test_agg_1 ) WAS CREATED
    [+] TIMESTAMP RANGE -- [2019-09-16T15:59:57 - 2019-09-16T15:59:57]
    <span style="color:orange">[+] TESTING RULE -- AGG_RULE01 ( ./agg_rule01.yaml )</span>
    [+] UPDATING RESULTS...
    [+] DELETING TEST INDEX...
    <span style="color:red">[+] TEST ( test_agg_1 ) FAILED</span>

<span style="color:#779ECB">[+] RUNNING test_agg_02 :</span>
    <span style="color:orange">[+] TEST ( test_agg_2 ) WAS DISABLED</span>


<span style="color:orange">[+] RESULTS WERE OUTPUT TO CURRENT_WORKING_DIRECTORY/results.json</span>

    ╒════════════╤══════════╤═════════════════════════════════════════════════════════════╕
    │ TestID     │ RESULT   │ MESSAGE                                                     │
    ╞════════════╪══════════╪═════════════════════════════════════════════════════════════╡
    │ test_1     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_2     │ PASSED   │                                                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_3     │ FAILED   │ &gt; 1 LOG(S) MATCHED: log001.json                             │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_4     │ FAILED   │ &gt; 7 LOG(S) DID NOT MATCH: agg_log001.json, agg_log002.json, │
    │            │          │   agg_log003.json, agg_log004.json, agg_log005.json,        │
    │            │          │   log001.json, log003.json                                  │
    ├────────────┼──────────┼─────────────────────────────────────────────────────────────┤
    │ test_agg_1 │ FAILED   │ &gt; HITS (5) EXCEEDED THE THRESHOLD                           │
    ╘════════════╧══════════╧═════════════════════════════════════════════════════════════╛
</code></pre></div></div>
:ET